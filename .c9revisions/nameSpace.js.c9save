{"ts":1376792592964,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1376793200201,"patch":[[{"diffs":[[1,"/*global nameSpaceName:true, jQuery: true, window: true, self: true */\n\n/**\n * @fileOverview Name Space file\n * @author Christopher Froehlioch\n * @version: 0.1.1\n */\n    \n \n /**\n * OJ IIFE definition to anchor JsDoc comments.\n * \n * @namespace internalNameSpace\n * @internal\n * @param {string} nameSpaceName\n * @param {Object} domVendor\n */\n (function (nameSpaceName, domVendor) {\n\t \n\tvar globalScope;\n    if(window) {\n        globalScope = window;\n    } else {\n        if(self) {\n            globalScope = self;\n        } else {\n            globalScope = this;\n        }\n    }\n    \n    domVendor = domVendor || Object.create(null);\n    if(!domVendor.isPlainObject) {\n        Object.defineProperties(domVendor, {\n            isPlainObject: {\n                value: function(test) {\n                    return test && test.constructor === Object;\n                }\n            } \n        });\n    }\n    \n    /**\n\t * boot strap name method into Object prototype\n\t * @function\n\t * @return {string} Name of the Object\n\t * @memberOf {object}\n\t*/\n    Object.defineProperties(Object.prototype, {\n        getInstanceName: {\n            value: function () {\n                var funcNameRegex = /function (.{1,})\\(/;\n                var results = (funcNameRegex).exec((this).constructor.toString());\n                return (results && results.length > 1) ? results[1] : \"\";\n            }\n        }\n    });\n\n    /**\n     * An internal representation of the namespace tree\n     * @internal\n\t * @memberOf internalNameSpace\n    */\n    var NsTree = {};\n\n    /**\n\t * OJ NameSpace\n\t * \n\t * @namespace OJ\n \t */\n    Object.defineProperty(globalScope, nameSpaceName, {\n        value:\n            (function () {\n\n                var nsInternal = {\n                    dependents: []\n                };\n\t\n\t\t\t\t/**\n\t\t\t\t * Fetches the registered properties and methods on the namespace and its child namespaces\n\t\t\t\t * @interal\n\t\t\t\t * @return {Array} An array of members defined as strings (e.g. 'namespace.constants.astringcnst')\n\t\t\t\t * @memberOf internalNameSpace\n\t\t\t\t*/\n                Object.defineProperty(nsInternal, 'getNsMembers', {\n                    value:\n                        function () {\n                            var members = [];\n\n                            function recurseTree(key, lastKey) {\n                                if (typeof (key) === 'string') {\n                                    members.push(lastKey + '.' + key);\n                                }\n                                if (domVendor.isPlainObject(key)) {\n                                    Object.keys(key).forEach(function (k) {\n                                        if (typeof (k) === 'string') {\n                                            members.push(lastKey + '.' + k);\n                                        }\n                                        if (domVendor.isPlainObject(key[k])) {\n                                            recurseTree(key[k], lastKey + '.' + k);\n                                        }\n                                    });\n                                }\n                            }\n                            Object.keys(NsTree[nameSpaceName]).forEach(function (key) {\n                                if (domVendor.isPlainObject(NsTree[nameSpaceName][key])) {\n                                    recurseTree(NsTree[nameSpaceName][key], nameSpaceName);\n                                }\n                            });\n                            return members;\n                        }\n                });\n\n\t\t\t\t/**\n\t\t\t\t * To support dependency management, when a property is lifted onto the namespace, notify dependents to initialize\n\t\t\t\t * @internal\n\t\t\t\t * @memberOf internalNameSpace\n\t\t\t\t*/\n                Object.defineProperty(nsInternal, 'alertDependents', {\n                    value:\n                        function (imports) {\n                        var deps = nsInternal.dependents.filter(function (depOn) {\n                            return false === depOn(imports);\n                        });\n                        if (Array.isArray(deps)) {\n                            nsInternal.dependents = deps;\n                        }\n                    }\n                });\n\n                /**\n                 * Internal nameSpaceName method to create new \"sub\" namespaces on arbitrary child objects.\n                 * @internal\t\n                 * @param spacename {string} the namespace name\n                 * @param tree {object} the internal tree representation of the current level of the namespace\n                 * @extends OJ\n\t\t\t\t * @memberOf internalNameSpace\n                 */\n                function makeNameSpace(spacename, tree) {\n                    /**\n                     * An internal mechanism to represent the instance of this namespace\n                     * @constructor\n\t\t\t\t\t * @internal\n\t\t\t\t\t * @memberOf makeNameSpace\n                    */\n                    var Class = new Function(\n                        \"return function \" + spacename + \"(){}\"\n                    )();\n                    \n                    /**\n                     * The derived instance to be constructed\n                     * @constructor\n\t\t\t\t\t * @internal\n\t\t\t\t\t * @memberOf makeNameSpace\n\t\t\t\t\t * @return {object}\n                    */\n                    function Base(nsName) {\n                        var proto = this;\n                        tree[nsName] = tree[nsName] || {};\n                        var nsTree = tree[nsName];\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t *\tRegister (e.g. \"Lift\") an Object into the prototype of the namespace.\n\t\t\t\t\t\t *\tThis Object will be readable/executable but is otherwise immutable.\n\t\t\t\t\t\t *   @name register\n\t\t\t\t\t\t *   @param {string} name The name of the object to lift\n\t\t\t\t\t\t *   @param {object} obj Any, arbitrary Object to use as the value.\n\t\t\t\t\t\t *   @return {object} The value of the new property.\n\t\t\t\t\t\t *   @memberOf OJ\n\t\t\t\t\t\t */\n                        Object.defineProperty(this, 'register', {\n                            value:\n                                function (name, obj, enumerable) {\n                                    'use strict';\n                                    if (!(typeof name === 'string') || name === '') {\n                                        throw new Error('Cannot lift a new property without a valid name.');\n                                    }\n                                    if (!obj) {\n                                        throw new Error('Cannot lift a new property without a valid property instance.');\n                                    }\n                                    if (proto[name]) {\n                                        throw new Error('Property named ' + name + ' is already defined on ' + spacename + '.');\n                                    }\n\n                                    //Guard against obliterating the tree as the tree is recursively extended\n                                    nsTree[name] = nsTree[name] || {\n                                        name: name,\n                                        type: typeof obj,\n                                        instance: obj.getInstanceName ? obj.getInstanceName() : 'unknown'\n                                    };\n\n                                    Object.defineProperty(proto, name, {\n                                        value: obj,\n                                        enumerable: false !== enumerable\n                                    });\n                                    nsInternal.alertDependents(nsName + '.' + spacename + '.' + name);\n\n                                    return obj;\n                                }\n                        });\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t *\tCreate a new, static namespace on the current parent (e.g. nsName.to... || nsName.is...)\n\t\t\t\t\t\t *   @name makeSubNameSpace\n\t\t\t\t\t\t *   @param {string} subNameSpace The name of the new namespace.\n\t\t\t\t\t\t *   @return {object} The new namespace.\n\t\t\t\t\t\t *   @memberOf OJ\n\t\t\t\t\t\t */\n                        proto.register('makeSubNameSpace',\n                            function (subNameSpace) {\n                                'use strict';\n                                if (!(typeof subNameSpace === 'string') || subNameSpace === '') {\n                                    throw new Error('Cannot create a new sub namespace without a valid name.');\n                                }\n                                if (proto.subNameSpace) {\n                                    throw new Error('Sub namespace named ' + subNameSpace + ' is already defined on ' + spacename + '.');\n                                }\n                                nsInternal.alertDependents(nsName + '.' + subNameSpace);\n\n                                var newNameSpace = makeNameSpace(subNameSpace, nsTree);\n\n                                if (subNameSpace !== 'constants') {\n                                    newNameSpace.register('constants', makeNameSpace('constants', nsTree), false);\n                                }\n\n                                proto.register(subNameSpace, newNameSpace, false);\n                                return newNameSpace;\n                            }, false);\n                    }\n\n                    Class.prototype = new Base(spacename);\n                    //Class.prototype.parent = Base.prototype;\n\n                    return new Class(spacename);\n                };\n\n                //Create the root of the tree as the current namespace\n                NsTree[nameSpaceName] = {};\n\n                //Define the core namespace and the return of this class\n                var NsOut = makeNameSpace(nameSpaceName, NsTree[nameSpaceName]);\n                Object.defineProperties(globalScope, { $nameSpace$: { value: NsOut } });\n\n                //Cache a handle on the vendor (probably jQuery) on the root namespace\n                /**\n\t\t\t\t *\tCache a handle on the vendor (probably jQuery) on the root namespace\n\t\t\t\t *  @name '?'   \n\t\t\t\t *\t@return {jQuery}\n\t\t\t\t *  @memberOf OJ\n\t\t\t\t */\n\t\t\t\tNsOut.register('?', domVendor, false);\n                \n                //Cache the tree (useful for documentation/visualization/debugging)\n                /**\n\t\t\t\t *\tCache the tree (useful for documentation/visualization/debugging)\n\t\t\t\t *  @name 'tree'   \n\t\t\t\t *\t@return {NsTree}\n\t\t\t\t *  @memberOf OJ\n\t\t\t\t */\n\t\t\t\tNsOut.register('tree', NsTree[nameSpaceName], false);\n                \n                //Cache the name space name\n\t\t\t\t/**\n\t\t\t\t *\tCache the name space name\n\t\t\t\t *  @name 'name'   \n\t\t\t\t *\t@return {nameSpaceName}\n\t\t\t\t *  @memberOf OJ\n\t\t\t\t */\n                NsOut.register('name', nameSpaceName, false);\n\n\n                /**\n                 *   \"Depend\" an Object upon another member of this namespace, upon another namespace,\n                 *   or upon a member of another namespace\n                 *   @param (array) array of dependencies for this method\n                 *   @param (function) obj Any, arbitrary Object to use as the value\n\t\t\t\t *   @memberOf OJ\n                 */\n                function dependsOn(dependencies, callBack, imports) {\n                    'use strict';\n                    var ret = false;\n                    var nsMembers = nsInternal.getNsMembers();\n                    if (dependencies && dependencies.length > 0 && callBack) {\n                        var missing = dependencies.filter(function (depen) {\n                            return (nsMembers.indexOf(depen) === -1 && (!imports || imports !== depen));\n                        });\n                        if (missing.length === 0) {\n                            ret = true;\n                            callBack();\n                        }\n                        else {\n                            nsInternal.dependents.push(function (imports) {\n                                return dependsOn(missing, callBack, imports);\n                            });\n                        }\n                    }\n                    return ret;\n                };\n                NsOut.register('dependsOn', dependsOn, false);\n\n                return NsOut;\n\n            }())\n    });\n\n}('OJ'));"]],"start1":0,"start2":0,"length1":0,"length2":12108}]],"length":12108,"saved":false}
{"ts":1376793212331,"patch":[[{"diffs":[[0," */\n"],[-1,"    \n \n "],[1,"\n\n"],[0,"/**\n"]],"start1":162,"start2":162,"length1":16,"length2":10},{"diffs":[[0,"ndor\n */"],[-1,"\n"],[0," (functi"]],"start1":326,"start2":326,"length1":17,"length2":16},{"diffs":[[0,"*/ (function"],[-1," "],[0,"(nameSpaceNa"]],"start1":332,"start2":332,"length1":25,"length2":24},{"diffs":[[0,") {\n"],[-1,"\t \n\t"],[1,"\n    "],[0,"var "]],"start1":369,"start2":369,"length1":12,"length2":13},{"diffs":[[0,";\n    if"],[1," "],[0,"(window)"]],"start1":393,"start2":393,"length1":16,"length2":17},{"diffs":[[0,"indow;\n    }"],[1,"\n   "],[0," else {\n    "]],"start1":436,"start2":436,"length1":24,"length2":28},{"diffs":[[0,"      if"],[1," "],[0,"(self) {"]],"start1":462,"start2":462,"length1":16,"length2":17},{"diffs":[[0,"       }"],[-1,""],[0,""],[1,"\n       "],[0," else {\n"]],"start1":513,"start2":513,"length1":16,"length2":24},{"diffs":[[0,"    }\n    }\n"],[-1,"    "],[0,""],[1,""],[0,"\n    domVend"]],"start1":573,"start2":573,"length1":28,"length2":24},{"diffs":[[0,";\n    if"],[-1,""],[0,""],[1," "],[0,"(!domVen"]],"start1":634,"start2":634,"length1":16,"length2":17},{"diffs":[[0,"       }"],[-1," "],[0,""],[1,""],[0,"\n       "]],"start1":873,"start2":873,"length1":17,"length2":16},{"diffs":[[0,";\n    }\n"],[-1,"    "],[0,""],[1,""],[0,"\n    /**"]],"start1":892,"start2":892,"length1":20,"length2":16},{"diffs":[[0,"    /**\n"],[-1,"\t"],[1,"    "],[0," * boot "]],"start1":901,"start2":901,"length1":17,"length2":20},{"diffs":[[0,"ototype\n"],[-1,"\t"],[1,"    "],[0," * @func"]],"start1":953,"start2":953,"length1":17,"length2":20},{"diffs":[[0,"unction\n"],[-1,"\t"],[1,"    "],[0," * @retu"]],"start1":970,"start2":970,"length1":17,"length2":20},{"diffs":[[0," Object\n"],[-1,"\t"],[1,"    "],[0," * @memb"]],"start1":1013,"start2":1013,"length1":17,"length2":20},{"diffs":[[0,"object}\n"],[-1,"\t"],[1,"     "],[0,"*/\n    O"]],"start1":1039,"start2":1039,"length1":17,"length2":21},{"diffs":[[0," value: function"],[-1," "],[0,""],[1,""],[0,"() {\n           "]],"start1":1141,"start2":1141,"length1":33,"length2":32},{"diffs":[[0,"nternal\n"],[-1,"\t"],[1,"    "],[0," * @memb"]],"start1":1483,"start2":1483,"length1":17,"length2":20},{"diffs":[[0,"meSpace\n    "],[1," "],[0,"*/\n    var N"]],"start1":1518,"start2":1518,"length1":24,"length2":25},{"diffs":[[0,"    /**\n"],[-1,"\t"],[1,"    "],[0," * OJ Na"]],"start1":1556,"start2":1556,"length1":17,"length2":20},{"diffs":[[0,"ace\n"],[-1,"\t * \n\t"],[1,"     * \n    "],[0," * @"]],"start1":1580,"start2":1580,"length1":14,"length2":20},{"diffs":[[0,"ace OJ\n "],[-1,"\t"],[1,"   "],[0," */\n    "]],"start1":1606,"start2":1606,"length1":17,"length2":19},{"diffs":[[0,"  value:"],[-1,"\n           "],[0," (functi"]],"start1":1683,"start2":1683,"length1":28,"length2":16},{"diffs":[[0,"tion"],[-1," "],[0,"() {\n\n"],[-1,"    "],[0,"    "]],"start1":1697,"start2":1697,"length1":19,"length2":14},{"diffs":[[0,"        "],[-1," "],[-1,"   "],[0,"dependen"]],"start1":1746,"start2":1746,"length1":20,"length2":16},{"diffs":[[0,"    "],[-1,"    };\n\t\n\t\t\t\t/**\n\t\t\t\t"],[1,"};\n\n            /**\n            "],[0," * F"]],"start1":1777,"start2":1777,"length1":29,"length2":40},{"diffs":[[0,"ces\n"],[-1,"\t\t\t\t * @interal\n\t\t\t\t"],[1,"             * @interal\n            "],[0," * @"]],"start1":1900,"start2":1900,"length1":28,"length2":44},{"diffs":[[0,"gcnst')\n"],[-1,"\t\t\t\t"],[1,"            "],[0," * @memb"]],"start1":2031,"start2":2031,"length1":20,"length2":28},{"diffs":[[0,"alNameSpace\n"],[-1,"\t\t\t\t*/\n"],[1,"         "],[0,"    "],[1,"*/\n"],[0,"            "]],"start1":2070,"start2":2070,"length1":35,"length2":40},{"diffs":[[0,"    "],[-1,"    "],[0,"value:"],[-1,"\n                       "],[0," fun"]],"start1":2174,"start2":2174,"length1":42,"length2":14},{"diffs":[[0,"function"],[-1," "],[0,"() {\n   "]],"start1":2185,"start2":2185,"length1":17,"length2":16},{"diffs":[[0,"            "],[-1,"    "],[-1,"    "],[0,"var members "]],"start1":2206,"start2":2206,"length1":32,"length2":24},{"diffs":[[0," = [];\n\n"],[-1,"        "],[0,"        "]],"start1":2229,"start2":2229,"length1":24,"length2":16},{"diffs":[[0,"            "],[-1,"    "],[-1,"    "],[0,"if (typeof ("]],"start1":2306,"start2":2306,"length1":32,"length2":24},{"diffs":[[0," (typeof"],[-1," "],[0,"(key) =="]],"start1":2320,"start2":2320,"length1":17,"length2":16},{"diffs":[[0,"'string') {\n"],[-1,"        "],[0,"            "]],"start1":2338,"start2":2338,"length1":32,"length2":24},{"diffs":[[0,"        "],[-1,"    "],[-1,"    }\n        "],[1,"}\n"],[0,"        "]],"start1":2429,"start2":2429,"length1":34,"length2":18},{"diffs":[[0,"            "],[-1,"    "],[-1,"    "],[0,"Object.keys("]],"start1":2515,"start2":2515,"length1":32,"length2":24},{"diffs":[[0,"function"],[-1," "],[0,"(k) {\n  "]],"start1":2552,"start2":2552,"length1":17,"length2":16},{"diffs":[[0,"            "],[-1,"    "],[-1,"    "],[0,"if (typeof ("]],"start1":2586,"start2":2586,"length1":32,"length2":24},{"diffs":[[0," (typeof"],[-1," "],[0,"(k) === "]],"start1":2600,"start2":2600,"length1":17,"length2":16},{"diffs":[[0,"            "],[-1,"   "],[-1,"     "],[0,"members.push"]],"start1":2652,"start2":2652,"length1":32,"length2":24},{"diffs":[[0,"            "],[-1,"        }\n   "],[1,"}\n"],[0,"            "]],"start1":2717,"start2":2717,"length1":37,"length2":26},{"diffs":[[0,"                "],[-1,"     "],[0,"if (domVendor.is"]],"start1":2747,"start2":2747,"length1":37,"length2":32},{"diffs":[[0,"(key[k])) {\n"],[-1,"        "],[0,"            "]],"start1":2790,"start2":2790,"length1":32,"length2":24},{"diffs":[[0,"        "],[-1,"        }\n        "],[1,"}\n"],[0,"        "]],"start1":2902,"start2":2902,"length1":34,"length2":18},{"diffs":[[0,"        "],[-1,"     "],[-1,"   }\n        "],[1,"}\n"],[0,"        "]],"start1":2960,"start2":2960,"length1":34,"length2":18},{"diffs":[[0,"            "],[-1,"      "],[-1,"  "],[0,"Object.keys("]],"start1":3000,"start2":3000,"length1":32,"length2":24},{"diffs":[[0,"tion"],[-1," "],[0,"(key) {\n"],[-1,"        "],[0,"    "]],"start1":3059,"start2":3059,"length1":25,"length2":16},{"diffs":[[0,"            "],[-1,"     "],[-1,"   "],[0,"recurseTree("]],"start1":3170,"start2":3170,"length1":32,"length2":24},{"diffs":[[0,"        "],[-1,"        }\n      "],[1,"}\n"],[0,"        "]],"start1":3254,"start2":3254,"length1":32,"length2":18},{"diffs":[[0,"            "],[-1,"  "],[0,"});\n"],[-1,"        "],[0,"            "]],"start1":3272,"start2":3272,"length1":38,"length2":28},{"diffs":[[0,"rs;\n            "],[1,"    }\n"],[0,"            }\n  "]],"start1":3320,"start2":3320,"length1":32,"length2":38},{"diffs":[[0," }\n            }"],[-1,"\n    "],[1,");\n\n"],[0,"            });\n"]],"start1":3339,"start2":3339,"length1":37,"length2":36},{"diffs":[[0,"    "],[-1,"});\n\n\t\t\t\t/**\n\t\t\t\t"],[1,"/**\n            "],[0," * T"]],"start1":3367,"start2":3367,"length1":25,"length2":24},{"diffs":[[0,"tialize\n"],[-1,"\t\t\t\t"],[1,"            "],[0," * @inte"]],"start1":3494,"start2":3494,"length1":20,"length2":28},{"diffs":[[0,"nternal\n"],[-1,"\t\t\t\t"],[1,"            "],[0," * @memb"]],"start1":3519,"start2":3519,"length1":20,"length2":28},{"diffs":[[0,"ace\n"],[-1,"\t\t\t\t*/\n"],[1,"         "],[0,"    "],[1,"*/\n"],[0,"    "]],"start1":3566,"start2":3566,"length1":19,"length2":24},{"diffs":[[0,"    "],[-1,"    "],[0,"value:"],[-1,"\n                       "],[0," fun"]],"start1":3665,"start2":3665,"length1":42,"length2":14},{"diffs":[[0," value: function"],[-1," "],[0,"(imports) {\n    "]],"start1":3668,"start2":3668,"length1":33,"length2":32},{"diffs":[[0,"tion(imports) {\n"],[-1,"    "],[0,"                "]],"start1":3680,"start2":3680,"length1":36,"length2":32},{"diffs":[[0,"ter(function"],[-1," "],[0,"(depOn) {\n  "]],"start1":3752,"start2":3752,"length1":25,"length2":24},{"diffs":[[0,"            "],[-1,"   "],[-1," "],[0,"return false"]],"start1":3786,"start2":3786,"length1":28,"length2":24},{"diffs":[[0,"                "],[-1,"    "],[0,"});\n            "]],"start1":3835,"start2":3835,"length1":36,"length2":32},{"diffs":[[0,"            "],[-1,"   "],[-1," "],[0,"if (Array.is"]],"start1":3863,"start2":3863,"length1":28,"length2":24},{"diffs":[[0,"ay(deps)) {\n"],[-1,"    "],[0,"            "]],"start1":3890,"start2":3890,"length1":28,"length2":24},{"diffs":[[0,"            "],[-1,"   "],[-1," "],[0,"}\n"],[-1,"    "],[0,"            "]],"start1":3964,"start2":3964,"length1":34,"length2":26},{"diffs":[[0,"              }\n"],[-1,"    "],[0,"            });\n"]],"start1":3980,"start2":3980,"length1":36,"length2":32},{"diffs":[[0,"            "],[-1,"    /**\n    "],[1,"/**\n"],[0,"            "]],"start1":4013,"start2":4013,"length1":36,"length2":28},{"diffs":[[0,"s.\n             "],[-1,"    "],[0,"* @internal\t\n   "]],"start1":4130,"start2":4130,"length1":36,"length2":32},{"diffs":[[0,"ternal\t\n"],[-1,"    "],[0,"        "]],"start1":4151,"start2":4151,"length1":20,"length2":16},{"diffs":[[0,"ce name\n"],[-1,"    "],[0,"        "]],"start1":4211,"start2":4211,"length1":20,"length2":16},{"diffs":[[0,"f the namespace\n"],[-1,"    "],[0,"             * @"]],"start1":4310,"start2":4310,"length1":36,"length2":32},{"diffs":[[0,"ends OJ\n"],[-1,"\t\t\t\t"],[1,"            "],[0," * @memb"]],"start1":4345,"start2":4345,"length1":20,"length2":28},{"diffs":[[0,"            "],[-1," "],[-1,"   */\n    "],[1,"*/\n"],[0,"            "]],"start1":4397,"start2":4397,"length1":35,"length2":27},{"diffs":[[0,"            "],[-1,"  "],[-1,"  "],[0,"/**\n"],[-1,"    "],[0,"            "]],"start1":4470,"start2":4470,"length1":36,"length2":28},{"diffs":[[0,"                "],[-1,"  "],[-1,"  "],[0,"* @constructor\n\t"]],"start1":4572,"start2":4572,"length1":36,"length2":32},{"diffs":[[0,"tructor\n"],[-1,"\t\t\t\t\t * @internal\n\t\t\t\t\t"],[1,"                 * @internal\n                "],[0," * @memb"]],"start1":4595,"start2":4595,"length1":39,"length2":61},{"diffs":[[0,"            "],[-1,"   */\n   "],[1,"*/\n"],[0,"            "]],"start1":4680,"start2":4680,"length1":33,"length2":27},{"diffs":[[0,"            "],[-1," "],[0,"var Class = "]],"start1":4699,"start2":4699,"length1":25,"length2":24},{"diffs":[[0,"ion("],[-1,"\n                        "],[0,"\"ret"]],"start1":4732,"start2":4732,"length1":33,"length2":8},{"diffs":[[0,"){}\""],[-1,"\n                    )();\n                    \n    "],[1,")();\n\n"],[0,"    "]],"start1":4771,"start2":4771,"length1":59,"length2":14},{"diffs":[[0,"            /**\n"],[-1,"    "],[0,"                "]],"start1":4785,"start2":4785,"length1":36,"length2":32},{"diffs":[[0,"                "],[-1,"    "],[0,"* @constructor\n\t"]],"start1":4860,"start2":4860,"length1":36,"length2":32},{"diffs":[[0,"tor\n"],[-1,"\t\t\t\t\t * @internal\n\t\t\t\t\t"],[1,"                 * @internal\n                "],[0," * @"]],"start1":4887,"start2":4887,"length1":31,"length2":53},{"diffs":[[0,"meSpace\n"],[-1,"\t\t\t\t\t"],[1,"                "],[0," * @retu"]],"start1":4955,"start2":4955,"length1":21,"length2":32},{"diffs":[[0,"            "],[-1,"   */\n   "],[1,"*/\n"],[0,"            "]],"start1":5004,"start2":5004,"length1":33,"length2":27},{"diffs":[[0,"                "],[-1," "],[0,"function Base(ns"]],"start1":5019,"start2":5019,"length1":33,"length2":32},{"diffs":[[0,"            "],[-1,"    "],[0,"var proto = "]],"start1":5067,"start2":5067,"length1":28,"length2":24},{"diffs":[[0,"oto = this;\n"],[-1,"    "],[0,"            "]],"start1":5085,"start2":5085,"length1":28,"length2":24},{"diffs":[[0,"            "],[-1,"    "],[0,"var nsTree ="]],"start1":5160,"start2":5160,"length1":28,"length2":24},{"diffs":[[0,"Name];\n\n"],[-1,"\t\t\t\t\t\t/**\n\t\t\t\t\t\t"],[1,"                    /**\n                    "],[0," *\tRegis"]],"start1":5192,"start2":5192,"length1":32,"length2":60},{"diffs":[[0,"espace.\n"],[-1,"\t\t\t\t\t\t"],[1,"                    "],[0," *\tThis "]],"start1":5309,"start2":5309,"length1":22,"length2":36},{"diffs":[[0,"le.\n"],[-1,"\t\t\t\t\t\t *   @name register\n\t\t\t\t\t\t"],[1,"                     *   @name register\n                    "],[0," *  "]],"start1":5404,"start2":5404,"length1":40,"length2":68},{"diffs":[[0,"to lift\n"],[-1,"\t\t\t\t\t\t"],[1,"                    "],[0," *   @pa"]],"start1":5517,"start2":5517,"length1":22,"length2":36},{"diffs":[[0," value.\n"],[-1,"\t\t\t\t\t\t"],[1,"                    "],[0," *   @re"]],"start1":5605,"start2":5605,"length1":22,"length2":36},{"diffs":[[0,"operty.\n"],[-1,"\t\t\t\t\t\t"],[1,"                    "],[0," *   @me"]],"start1":5678,"start2":5678,"length1":22,"length2":36},{"diffs":[[0,"memberOf OJ\n"],[-1,"\t\t\t\t\t\t */\n"],[0,"    "],[1,"                 */\n"],[0,"            "]],"start1":5712,"start2":5712,"length1":38,"length2":48},{"diffs":[[0,"    "],[-1,"    "],[0,"value:"],[-1,"\n                               "],[0," fun"]],"start1":5830,"start2":5830,"length1":50,"length2":14},{"diffs":[[0,"function"],[-1," "],[0,"(name, o"]],"start1":5841,"start2":5841,"length1":17,"length2":16},{"diffs":[[0,"            "],[-1,"        "],[0,"'use strict'"]],"start1":5891,"start2":5891,"length1":32,"length2":24},{"diffs":[[0,"            "],[-1,"    "],[-1,"    "],[0,"if (!(typeof"]],"start1":5933,"start2":5933,"length1":32,"length2":24},{"diffs":[[0,"e === '') {\n"],[-1,"        "],[0,"            "]],"start1":5983,"start2":5983,"length1":32,"length2":24},{"diffs":[[0,"        "],[-1,"        }\n        "],[1,"}\n"],[0,"        "]],"start1":6116,"start2":6116,"length1":34,"length2":18},{"diffs":[[0,"            "],[-1,"      "],[-1,"  "],[0,"throw new Er"]],"start1":6186,"start2":6186,"length1":32,"length2":24},{"diffs":[[0,"        "],[-1,"        }\n       "],[1,"}\n"],[0,"        "]],"start1":6300,"start2":6300,"length1":33,"length2":18},{"diffs":[[0,"                "],[-1," "],[0,"if (proto[name])"]],"start1":6322,"start2":6322,"length1":33,"length2":32},{"diffs":[[0,"to[name]) {\n"],[-1,"        "],[0,"            "]],"start1":6345,"start2":6345,"length1":32,"length2":24},{"diffs":[[0,"        "],[-1,"       "],[-1," "],[0,"}\n\n"],[-1,"        "],[0,"        "]],"start1":6498,"start2":6498,"length1":35,"length2":19},{"diffs":[[0,"        "],[-1,"        "],[0,"nsTree[n"]],"start1":6631,"start2":6631,"length1":24,"length2":16},{"diffs":[[0,"        "],[-1,"        "],[0,"name: na"]],"start1":6696,"start2":6696,"length1":24,"length2":16},{"diffs":[[0,": name,\n"],[-1,"        "],[0,"        "]],"start1":6708,"start2":6708,"length1":24,"length2":16},{"diffs":[[0,"        "],[-1,"        "],[0,"instance"]],"start1":6790,"start2":6790,"length1":24,"length2":16},{"diffs":[[0,"            "],[-1,"        "],[0,"};\n\n        "]],"start1":6880,"start2":6880,"length1":32,"length2":24},{"diffs":[[0,"            "],[-1," "],[-1,"       "],[0,"Object.defin"]],"start1":6912,"start2":6912,"length1":32,"length2":24},{"diffs":[[0,"            "],[-1,"        "],[0,"value: obj,\n"]],"start1":6981,"start2":6981,"length1":32,"length2":24},{"diffs":[[0,"        "],[-1," "],[-1,"       "],[0,"enumerab"]],"start1":7029,"start2":7029,"length1":24,"length2":16},{"diffs":[[0,"            "],[-1,"        "],[0,"});\n        "]],"start1":7086,"start2":7086,"length1":32,"length2":24},{"diffs":[[0,"            "],[-1,"  "],[-1,"      "],[0,"nsInternal.a"]],"start1":7118,"start2":7118,"length1":32,"length2":24},{"diffs":[[0,"            "],[-1,"        "],[0,"return obj;\n"]],"start1":7214,"start2":7214,"length1":32,"length2":24},{"diffs":[[0,"bj;\n            "],[1,"            }\n"],[0,"                "]],"start1":7234,"start2":7234,"length1":32,"length2":46},{"diffs":[[0,"               }"],[1,");\n"],[0,"\n               "]],"start1":7269,"start2":7269,"length1":32,"length2":35},{"diffs":[[0,"    "],[-1,"    });\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t"],[1,"/**\n                    "],[0," *\tC"]],"start1":7305,"start2":7305,"length1":33,"length2":32},{"diffs":[[0,".is...)\n"],[-1,"\t\t\t\t\t\t"],[1,"                    "],[0," *   @na"]],"start1":7417,"start2":7417,"length1":22,"length2":36},{"diffs":[[0,"meSpace\n"],[-1,"\t\t\t\t\t\t"],[1,"                    "],[0," *   @pa"]],"start1":7465,"start2":7465,"length1":22,"length2":36},{"diffs":[[0," namespace.\n"],[-1,"\t\t\t\t\t\t"],[1,"                    "],[0," *   @return"]],"start1":7546,"start2":7546,"length1":30,"length2":44},{"diffs":[[0,"espace.\n"],[-1,"\t\t\t\t\t\t"],[1,"                    "],[0," *   @me"]],"start1":7611,"start2":7611,"length1":22,"length2":36},{"diffs":[[0," OJ\n"],[-1,"\t\t\t\t\t\t */\n"],[1,"                "],[0,"     "],[1,"*/\n"],[0,"    "]],"start1":7653,"start2":7653,"length1":23,"length2":32},{"diffs":[[0,"                "],[1," "],[0,"proto.register('"]],"start1":7684,"start2":7684,"length1":32,"length2":33},{"diffs":[[0,"Space',\n"],[-1,"        "],[1,"\n"],[0,"        "]],"start1":7728,"start2":7728,"length1":24,"length2":17},{"diffs":[[0,"function"],[-1," "],[0,"(subName"]],"start1":7757,"start2":7757,"length1":17,"length2":16},{"diffs":[[0,"            "],[-1,"     "],[-1,"   "],[0,"'use strict'"]],"start1":7794,"start2":7794,"length1":32,"length2":24},{"diffs":[[0,"se strict';\n"],[-1,"        "],[0,"            "]],"start1":7808,"start2":7808,"length1":32,"length2":24},{"diffs":[[0,"            "],[-1,"      "],[-1,"  "],[0,"throw new Er"]],"start1":7926,"start2":7926,"length1":32,"length2":24},{"diffs":[[0,"        "],[-1,"        }\n      "],[1,"}\n"],[0,"        "]],"start1":8030,"start2":8030,"length1":32,"length2":18},{"diffs":[[0,"                "],[-1,"  "],[0,"if (proto.subNam"]],"start1":8048,"start2":8048,"length1":34,"length2":32},{"diffs":[[0,"ameSpace) {\n"],[-1,"        "],[0,"            "]],"start1":8078,"start2":8078,"length1":32,"length2":24},{"diffs":[[0,"        "],[-1,"        }\n        "],[1,"}\n"],[0,"        "]],"start1":8236,"start2":8236,"length1":34,"length2":18},{"diffs":[[0,"            "],[-1,"       "],[-1," "],[0,"var newNameS"]],"start1":8340,"start2":8340,"length1":32,"length2":24},{"diffs":[[0,"            "],[-1,"        "],[0,"if (subNameS"]],"start1":8421,"start2":8421,"length1":32,"length2":24},{"diffs":[[0,"nstants') {\n"],[-1,"        "],[0,"            "]],"start1":8457,"start2":8457,"length1":32,"length2":24},{"diffs":[[0,"        "],[-1,"        }\n\n        "],[1,"}\n\n"],[0,"        "]],"start1":8592,"start2":8592,"length1":35,"length2":19},{"diffs":[[0,"            "],[-1,"        "],[0,"return newNa"]],"start1":8690,"start2":8690,"length1":32,"length2":24},{"diffs":[[0,"        "],[-1,"        "],[0,"}, false"]],"start1":8735,"start2":8735,"length1":24,"length2":16},{"diffs":[[0,"            "],[-1," "],[-1,"   }\n\n    "],[1,"}\n\n"],[0,"            "]],"start1":8758,"start2":8758,"length1":35,"length2":27},{"diffs":[[0,"        "],[-1," "],[-1,"   "],[0,"//Class."]],"start1":8836,"start2":8836,"length1":20,"length2":16},{"diffs":[[0,"                "],[-1,"    "],[0,"return new Class"]],"start1":8888,"start2":8888,"length1":36,"length2":32},{"diffs":[[0,"            "],[-1," "],[-1,"   "],[0,"};\n\n"],[-1,"    "],[0,"            "]],"start1":8933,"start2":8933,"length1":36,"length2":28},{"diffs":[[0,"        "],[-1,"  "],[-1,"  "],[0,"NsTree[n"]],"start1":9020,"start2":9020,"length1":20,"length2":16},{"diffs":[[0,"ame] = {};\n\n"],[-1,"    "],[0,"            "]],"start1":9045,"start2":9045,"length1":28,"length2":24},{"diffs":[[0,"            "],[-1,"  "],[-1,"  "],[0,"var NsOut = "]],"start1":9126,"start2":9126,"length1":28,"length2":24},{"diffs":[[0,"]);\n            "],[-1,"    "],[0,"Object.definePro"]],"start1":9199,"start2":9199,"length1":36,"length2":32},{"diffs":[[0,"e, {"],[-1," $nameSpace$: { value: NsOut } });\n\n    "],[1,"\n                $nameSpace$: {\n                    value: NsOut\n                }\n            });\n\n"],[0,"    "]],"start1":9249,"start2":9249,"length1":48,"length2":108},{"diffs":[[0,"amespace\n       "],[1,"     /**\n"],[0,"         /**\n\t\t\t"]],"start1":9427,"start2":9427,"length1":32,"length2":41},{"diffs":[[0,"**\n         "],[-1,"/**\n\t\t\t\t"],[1,"   "],[0," *\tCache a h"]],"start1":9449,"start2":9449,"length1":32,"length2":27},{"diffs":[[0,"mespace\n"],[-1,"\t\t\t\t"],[1,"            "],[0," *  @nam"]],"start1":9528,"start2":9528,"length1":20,"length2":28},{"diffs":[[0,"name '?'   \n"],[-1,"\t\t\t\t"],[1,"            "],[0," *\t@return {"]],"start1":9553,"start2":9553,"length1":28,"length2":36},{"diffs":[[0,"jQuery}\n"],[-1,"\t\t\t\t"],[1,"            "],[0," *  @mem"]],"start1":9589,"start2":9589,"length1":20,"length2":28},{"diffs":[[0,"memberOf OJ\n"],[-1,"\t\t\t\t */\n\t\t\t\t"],[1,"             */\n            "],[0,"NsOut.regist"]],"start1":9614,"start2":9614,"length1":36,"length2":52},{"diffs":[[0,"false);\n"],[-1,"                \n    "],[1,"\n"],[0,"        "]],"start1":9685,"start2":9685,"length1":37,"length2":17},{"diffs":[[0,"    "],[-1,"    /**\n\t\t\t\t"],[1,"/**\n            "],[0," *\tC"]],"start1":9782,"start2":9782,"length1":20,"length2":24},{"diffs":[[0,"ugging)\n"],[-1,"\t\t\t\t"],[1,"            "],[0," *  @nam"]],"start1":9863,"start2":9863,"length1":20,"length2":28},{"diffs":[[0,"e 'tree'   \n"],[-1,"\t\t\t\t"],[1,"            "],[0," *\t@return {"]],"start1":9891,"start2":9891,"length1":28,"length2":36},{"diffs":[[0,"NsTree}\n"],[-1,"\t\t\t\t"],[1,"            "],[0," *  @mem"]],"start1":9927,"start2":9927,"length1":20,"length2":28},{"diffs":[[0," OJ\n"],[-1,"\t\t\t\t */\n\t\t\t\t"],[1,"             */\n            "],[0,"NsOu"]],"start1":9960,"start2":9960,"length1":20,"length2":36},{"diffs":[[0,"e);\n"],[-1,"                \n    "],[1,"\n"],[0,"    "]],"start1":10042,"start2":10042,"length1":29,"length2":9},{"diffs":[[0,"ame\n"],[-1,"\t\t\t\t/**\n\t\t\t\t"],[1,"            /**\n            "],[0," *\tC"]],"start1":10083,"start2":10083,"length1":20,"length2":36},{"diffs":[[0,"ce name\n"],[-1,"\t\t\t\t"],[1,"            "],[0," *  @nam"]],"start1":10136,"start2":10136,"length1":20,"length2":28},{"diffs":[[0,"ame'   \n"],[-1,"\t\t\t\t"],[1,"            "],[0," *\t@retu"]],"start1":10168,"start2":10168,"length1":20,"length2":28},{"diffs":[[0,"ceName}\n"],[-1,"\t\t\t\t"],[1,"            "],[0," *  @mem"]],"start1":10207,"start2":10207,"length1":20,"length2":28},{"diffs":[[0," OJ\n"],[-1,"\t\t\t\t */\n"],[1,"         "],[0,"    "],[1,"*/\n"],[0,"    "]],"start1":10240,"start2":10240,"length1":20,"length2":24},{"diffs":[[0,"            "],[-1,"  "],[-1,"  "],[0,"/**\n"],[-1,"    "],[0,"            "]],"start1":10320,"start2":10320,"length1":36,"length2":28},{"diffs":[[0,"            "],[-1,"   "],[-1," "],[0,"*   or upon "]],"start1":10436,"start2":10436,"length1":28,"length2":24},{"diffs":[[0,"other namespace\n"],[-1,"    "],[0,"             *  "]],"start1":10474,"start2":10474,"length1":36,"length2":32},{"diffs":[[0,"od\n             "],[-1,"   "],[-1," "],[0,"*   @param (func"]],"start1":10557,"start2":10557,"length1":36,"length2":32},{"diffs":[[0,"lue\n"],[-1,"\t\t\t\t"],[1,"            "],[0," *  "]],"start1":10637,"start2":10637,"length1":12,"length2":20},{"diffs":[[0,"            "],[-1,"    */\n    "],[1,"*/\n"],[0,"            "]],"start1":10672,"start2":10672,"length1":35,"length2":27},{"diffs":[[0,"                "],[-1,"    "],[0,"'use strict';\n  "]],"start1":10753,"start2":10753,"length1":36,"length2":32},{"diffs":[[0,"  'use strict';\n"],[-1,"    "],[0,"                "]],"start1":10767,"start2":10767,"length1":36,"length2":32},{"diffs":[[0,"            "],[-1,"    "],[0,"var nsMember"]],"start1":10820,"start2":10820,"length1":28,"length2":24},{"diffs":[[0,"sMembers();\n"],[-1,"    "],[0,"            "]],"start1":10863,"start2":10863,"length1":28,"length2":24},{"diffs":[[0,"            "],[-1,"    "],[0,"var missing "]],"start1":10958,"start2":10958,"length1":28,"length2":24},{"diffs":[[0,"function"],[-1," "],[0,"(depen) "]],"start1":11004,"start2":11004,"length1":17,"length2":16},{"diffs":[[0,"                "],[-1,"   "],[-1," "],[0,"return (nsMember"]],"start1":11030,"start2":11030,"length1":36,"length2":32},{"diffs":[[0,"            "],[-1,"    });\n    "],[1,"});\n"],[0,"            "]],"start1":11131,"start2":11131,"length1":36,"length2":28},{"diffs":[[0,"        "],[-1,"    "],[0,"ret = tr"]],"start1":11211,"start2":11211,"length1":20,"length2":16},{"diffs":[[0,"= true;\n"],[-1,"    "],[0,"        "]],"start1":11223,"start2":11223,"length1":20,"length2":16},{"diffs":[[0,"            "],[-1,"    }\n    "],[1,"}\n"],[0,"            "]],"start1":11275,"start2":11275,"length1":34,"length2":26},{"diffs":[[0,"         else {\n"],[-1,"    "],[0,"                "]],"start1":11300,"start2":11300,"length1":36,"length2":32},{"diffs":[[0,"function"],[-1," "],[0,"(imports"]],"start1":11367,"start2":11367,"length1":17,"length2":16},{"diffs":[[0,"            "],[-1,"   "],[-1," "],[0,"return depen"]],"start1":11403,"start2":11403,"length1":28,"length2":24},{"diffs":[[0,"            "],[-1,"    });\n    "],[1,"});\n"],[0,"            "]],"start1":11473,"start2":11473,"length1":36,"length2":28},{"diffs":[[0,"            "],[-1,"    }\n    "],[1,"}\n"],[0,"            "]],"start1":11515,"start2":11515,"length1":34,"length2":26},{"diffs":[[0,"    "],[-1,"    };\n    "],[1,"};\n"],[0,"    "]],"start1":11565,"start2":11565,"length1":19,"length2":11},{"diffs":[[0,"            "],[-1,"    "],[0,"return NsOut"]],"start1":11632,"start2":11632,"length1":28,"length2":24},{"diffs":[[0,"NsOut;\n\n"],[-1,"    "],[0,"        "]],"start1":11651,"start2":11651,"length1":20,"length2":16}]],"length":11690,"saved":false}
{"ts":1376793472603,"patch":[[{"diffs":[[0,"me, tree) {\n"],[1,"                \n"],[0,"            "]],"start1":4454,"start2":4454,"length1":24,"length2":41}]],"length":11707,"saved":false}
